/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Entities.*;
import static Interface.PlayGame.player1;
import static Interface.PlayGame.player2;
import static Interface.UserLogin.*;
import Methods.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class Menu extends javax.swing.JFrame {

    Methods met = new Methods();
    String globalElement = "";
    String globalName = "";
    

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    
    public static void UserStadistics(){
        try{
            int playedGames = UsersBackup.getGamesPlayed();
            int gamesWon = UsersBackup.getGamesWon();
            int gamesLoss = UsersBackup.getGamesLoss();

            jTextField1.setText(Integer.toString(playedGames));
            jTextField2.setText(Integer.toString(gamesWon));
            jTextField3.setText(Integer.toString(gamesLoss));

            jTextField4.setText(Integer.toString((gamesWon*100)/playedGames)+ "%");
        }
        catch(ArithmeticException e){
            jTextField4.setText("0" + "%");
        }
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTextField10 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton1.setText("PLAY THE GAME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 153, 453, 131));

        jButton6.setText("Log out");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(712, 11, -1, -1));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fire-animated-gif-4-iloveimg-resized (1).gif"))); // NOI18N
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, 530));

        jTabbedPane1.addTab("Start", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Played Games:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Games Wons:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Games Loss:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Performance:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        jTextField1.setEditable(false);
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 171, -1));

        jTextField2.setEditable(false);
        jPanel2.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 171, -1));

        jTextField3.setEditable(false);
        jPanel2.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 171, -1));

        jTextField4.setEditable(false);
        jTextField4.setText("(W*100)/T");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 171, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/poroUrf.jpg"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 200, 200));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel6.setText("Be the best, continue playing");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, -1, -1));

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/battle.jpg"))); // NOI18N
        jPanel2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        jTabbedPane1.addTab("Player Statics", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("Name of the character:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, 20));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setText("Element of the character:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Create");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setText("Character");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Abilities");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, -1, -1));

        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("Name of the abilitie:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, -1, -1));

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 80, -1));

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 80, -1));

        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 80, -1));

        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("Damage:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, -1, -1));

        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("Mana Costs:");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, -1, -1));

        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, 80, -1));

        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField9KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 80, -1));

        jLabel16.setForeground(new java.awt.Color(204, 204, 204));
        jLabel16.setText("Abilitie # 1");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, -1, -1));

        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField11KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, 80, -1));

        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField12KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 80, -1));

        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField13KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 80, -1));

        jLabel17.setForeground(new java.awt.Color(204, 204, 204));
        jLabel17.setText("Abilitie # 2");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 280, -1, -1));

        jLabel18.setForeground(new java.awt.Color(204, 204, 204));
        jLabel18.setText("Abilitie # 3");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, -1, -1));

        jTextField14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField14KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField14, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 80, -1));

        jTextField15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField15KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField15, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, 80, -1));

        jTextField16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField16KeyTyped(evt);
            }
        });
        jPanel3.add(jTextField16, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 80, -1));

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ESO-Wallpaper-the-elder-scrolls-online-37936113-1920-1056.jpg"))); // NOI18N
        jPanel3.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 510));

        jTabbedPane1.addTab("Create your Character", jPanel3);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField10KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 90, 80, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Name:");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 93, -1, -1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Element:");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 131, -1, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Search Character");
        jPanel5.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 46, -1, -1));

        jTextField17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField17KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField17, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 128, 81, -1));

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Abilitie # 2");
        jPanel5.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, -1, -1));

        jTextField18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField18KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField18, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 80, -1));

        jLabel21.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Abilitie # 1");
        jPanel5.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, -1, -1));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Name:");
        jPanel5.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, -1, -1));

        jLabel23.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Damage:");
        jPanel5.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, -1, -1));

        jLabel24.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Cost:");
        jPanel5.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, -1, -1));

        jTextField19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField19KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField19, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 80, -1));

        jTextField20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField20KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField20, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 80, -1));

        jTextField21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField21KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField21, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 80, -1));

        jTextField22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField22ActionPerformed(evt);
            }
        });
        jTextField22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField22KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 80, -1));

        jTextField23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField23KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField23, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, 80, -1));

        jTextField24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField24KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField24, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 80, -1));

        jTextField25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField25KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField25, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 80, -1));

        jTextField26.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField26KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField26, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 80, -1));

        jLabel25.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Abilitie # 3");
        jPanel5.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, -1, -1));

        jTextField27.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField27KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField27, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 380, 80, -1));

        jLabel26.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Character New Name:");
        jPanel5.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, -1, -1));

        jButton4.setText("Edit Chracter");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, -1, -1));

        jLabel28.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Edit Character");
        jPanel5.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 150, -1));

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Lannister_Background.jpg"))); // NOI18N
        jLabel34.setText("                     ");
        jPanel5.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        jTabbedPane1.addTab("Edit Characters", jPanel5);

        jPanel4.setMinimumSize(new java.awt.Dimension(800, 5));
        jPanel4.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setText("Search and Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 280, -1, -1));

        jLabel29.setText("Element:");
        jPanel4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, -1));

        jTextField29.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField29KeyTyped(evt);
            }
        });
        jPanel4.add(jTextField29, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 81, -1));

        jTextField30.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField30KeyTyped(evt);
            }
        });
        jPanel4.add(jTextField30, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 80, -1));

        jLabel30.setText("Name:");
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, -1, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("Search Character");
        jPanel4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, -1, -1));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/1232795_orig.jpg"))); // NOI18N
        jLabel33.setText(" ");
        jPanel4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 800, 540));

        jTabbedPane1.addTab("Delete Character", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try{
            String name = jTextField27.getText();
            
            if(name.equals("")){
                JOptionPane.showMessageDialog(null, "Don't left the name space in blank");
            }

            for (int i = 0; i < UsersBackup.getCharacters().size(); i++) {
                if (name.equalsIgnoreCase(UsersBackup.getCharacters().get(i).getName())) {
                    JOptionPane.showMessageDialog(null, "This name is alraeady used");
                    return;
                }
            }

            if (globalElement.equalsIgnoreCase("ground")) {
                GroundCharacter c = met.searchGroundCaracter(globalName, globalElement);
                c.setName(name);

                for (int i = 0; i < c.getGroundAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = jTextField18.getText();
                        int damage = Integer.parseInt(jTextField19.getText());
                        int cost = Integer.parseInt(jTextField20.getText());

                        c.getGroundAbilities().get(i).setName(nameA);
                        c.getGroundAbilities().get(i).setDamage(damage);
                        c.getGroundAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 1) {
                        String nameA = jTextField21.getText();
                        int damage = Integer.parseInt(jTextField22.getText());
                        int cost = Integer.parseInt(jTextField23.getText());

                        c.getGroundAbilities().get(i).setName(nameA);
                        c.getGroundAbilities().get(i).setDamage(damage);
                        c.getGroundAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 2) {
                        String nameA = jTextField24.getText();
                        int damage = Integer.parseInt(jTextField25.getText());
                        int cost = Integer.parseInt(jTextField26.getText());

                        c.getGroundAbilities().get(i).setName(nameA);
                        c.getGroundAbilities().get(i).setDamage(damage);
                        c.getGroundAbilities().get(i).setManaCosts(cost);
                    }
                }
                globalElement = "";
                globalName = "";

            } else if (globalElement.equalsIgnoreCase("fire")) {
                FireCharacter f = met.searchFireCaracter(globalName, globalElement);
                f.setName(name);

                for (int i = 0; i < f.getFireAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = jTextField18.getText();
                        int damage = Integer.parseInt(jTextField19.getText());
                        int cost = Integer.parseInt(jTextField20.getText());

                        f.getFireAbilities().get(i).setName(nameA);
                        f.getFireAbilities().get(i).setDamage(damage);
                        f.getFireAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 1) {
                        String nameA = jTextField21.getText();
                        int damage = Integer.parseInt(jTextField22.getText());
                        int cost = Integer.parseInt(jTextField23.getText());

                        f.getFireAbilities().get(i).setName(nameA);
                        f.getFireAbilities().get(i).setDamage(damage);
                        f.getFireAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 2) {
                        String nameA = jTextField24.getText();
                        int damage = Integer.parseInt(jTextField25.getText());
                        int cost = Integer.parseInt(jTextField26.getText());

                        f.getFireAbilities().get(i).setName(nameA);
                        f.getFireAbilities().get(i).setDamage(damage);
                        f.getFireAbilities().get(i).setManaCosts(cost);
                    }
                }
                globalElement = "";
                globalName = "";
            } else if (globalElement.equalsIgnoreCase("water")) {
                WaterCharacter w = met.searchWaterCaracter(globalName, globalElement);
                w.setName(name);

                for (int i = 0; i < w.getWaterAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = jTextField18.getText();
                        int damage = Integer.parseInt(jTextField19.getText());
                        int cost = Integer.parseInt(jTextField20.getText());

                        w.getWaterAbilities().get(i).setName(nameA);
                        w.getWaterAbilities().get(i).setDamage(damage);
                        w.getWaterAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 1) {
                        String nameA = jTextField21.getText();
                        int damage = Integer.parseInt(jTextField22.getText());
                        int cost = Integer.parseInt(jTextField23.getText());

                        w.getWaterAbilities().get(i).setName(nameA);
                        w.getWaterAbilities().get(i).setDamage(damage);
                        w.getWaterAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 2) {
                        String nameA = jTextField24.getText();
                        int damage = Integer.parseInt(jTextField25.getText());
                        int cost = Integer.parseInt(jTextField26.getText());

                        w.getWaterAbilities().get(i).setName(nameA);
                        w.getWaterAbilities().get(i).setDamage(damage);
                        w.getWaterAbilities().get(i).setManaCosts(cost);
                    }
                }
                globalElement = "";
                globalName = "";
            } else if (globalElement.equalsIgnoreCase("wind")) {
                WindCharacter wi = met.searchWindCaracter(globalName, globalElement);
                wi.setName(name);

                for (int i = 0; i < wi.getWindAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = jTextField18.getText();
                        int damage = Integer.parseInt(jTextField19.getText());
                        int cost = Integer.parseInt(jTextField20.getText());

                        wi.getWindAbilities().get(i).setName(nameA);
                        wi.getWindAbilities().get(i).setDamage(damage);
                        wi.getWindAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 1) {
                        String nameA = jTextField21.getText();
                        int damage = Integer.parseInt(jTextField22.getText());
                        int cost = Integer.parseInt(jTextField23.getText());

                        wi.getWindAbilities().get(i).setName(nameA);
                        wi.getWindAbilities().get(i).setDamage(damage);
                        wi.getWindAbilities().get(i).setManaCosts(cost);
                    }
                    if (i == 2) {
                        String nameA = jTextField24.getText();
                        int damage = Integer.parseInt(jTextField25.getText());
                        int cost = Integer.parseInt(jTextField26.getText());

                        wi.getWindAbilities().get(i).setName(nameA);
                        wi.getWindAbilities().get(i).setDamage(damage);
                        wi.getWindAbilities().get(i).setManaCosts(cost);
                    }
                }
                globalElement = "";
                globalName = "";

                jTextField18.setText(null);
                jTextField19.setText(null);
                jTextField20.setText(null);
                jTextField21.setText(null);
                jTextField22.setText(null);
                jTextField23.setText(null);
                jTextField24.setText(null);
                jTextField25.setText(null);
                jTextField26.setText(null);
                jTextField27.setText(null);
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Don't left spaces in blank");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField22ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            String name = jTextField10.getText();
            String elem = jTextField17.getText();
            globalName = name;
            if(name.equals("") || elem.equals("")){
                JOptionPane.showMessageDialog(null, "Don't left spaces in blank");
            }
            
            if (elem.equalsIgnoreCase("ground")) {
                GroundCharacter c = met.searchGroundCaracter(name, elem);
                for (int i = 0; i < c.getGroundAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = c.getGroundAbilities().get(i).getName();
                        int damage = c.getGroundAbilities().get(i).getDamage();
                        int cost = c.getGroundAbilities().get(i).getManaCosts();

                        jTextField18.setText(nameA);
                        jTextField19.setText(Integer.toString(damage));
                        jTextField20.setText(Integer.toString(cost));
                    }
                    if (i == 1) {
                        String nameA = c.getGroundAbilities().get(i).getName();
                        int damage = c.getGroundAbilities().get(i).getDamage();
                        int cost = c.getGroundAbilities().get(i).getManaCosts();

                        jTextField21.setText(nameA);
                        jTextField22.setText(Integer.toString(damage));
                        jTextField23.setText(Integer.toString(cost));
                    }
                    if (i == 2) {
                        String nameA = c.getGroundAbilities().get(i).getName();
                        int damage = c.getGroundAbilities().get(i).getDamage();
                        int cost = c.getGroundAbilities().get(i).getManaCosts();

                        jTextField24.setText(nameA);
                        jTextField25.setText(Integer.toString(damage));
                        jTextField26.setText(Integer.toString(cost));
                    }
                }
                globalElement = "ground";
            } else if (elem.equalsIgnoreCase("fire")) {
                FireCharacter f = met.searchFireCaracter(name, elem);
                for (int i = 0; i < f.getFireAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = f.getFireAbilities().get(i).getName();
                        int damage = f.getFireAbilities().get(i).getDamage();
                        int cost = f.getFireAbilities().get(i).getManaCosts();

                        jTextField18.setText(nameA);
                        jTextField19.setText(Integer.toString(damage));
                        jTextField20.setText(Integer.toString(cost));
                    }
                    if (i == 1) {
                        String nameA = f.getFireAbilities().get(i).getName();
                        int damage = f.getFireAbilities().get(i).getDamage();
                        int cost = f.getFireAbilities().get(i).getManaCosts();

                        jTextField21.setText(nameA);
                        jTextField22.setText(Integer.toString(damage));
                        jTextField23.setText(Integer.toString(cost));
                    }
                    if (i == 2) {
                        String nameA = f.getFireAbilities().get(i).getName();
                        int damage = f.getFireAbilities().get(i).getDamage();
                        int cost = f.getFireAbilities().get(i).getManaCosts();

                        jTextField24.setText(nameA);
                        jTextField25.setText(Integer.toString(damage));
                        jTextField26.setText(Integer.toString(cost));
                    }
                }
                globalElement = "fire";
            } else if (elem.equalsIgnoreCase("water")) {
                WaterCharacter w = met.searchWaterCaracter(name, elem);
                for (int i = 0; i < w.getWaterAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = w.getWaterAbilities().get(i).getName();
                        int damage = w.getWaterAbilities().get(i).getDamage();
                        int cost = w.getWaterAbilities().get(i).getManaCosts();

                        jTextField18.setText(nameA);
                        jTextField19.setText(Integer.toString(damage));
                        jTextField20.setText(Integer.toString(cost));
                    }
                    if (i == 1) {
                        String nameA = w.getWaterAbilities().get(i).getName();
                        int damage = w.getWaterAbilities().get(i).getDamage();
                        int cost = w.getWaterAbilities().get(i).getManaCosts();

                        jTextField21.setText(nameA);
                        jTextField22.setText(Integer.toString(damage));
                        jTextField23.setText(Integer.toString(cost));
                    }
                    if (i == 2) {
                        String nameA = w.getWaterAbilities().get(i).getName();
                        int damage = w.getWaterAbilities().get(i).getDamage();
                        int cost = w.getWaterAbilities().get(i).getManaCosts();

                        jTextField24.setText(nameA);
                        jTextField25.setText(Integer.toString(damage));
                        jTextField26.setText(Integer.toString(cost));
                    }
                }
                globalElement = "water";
            } else if (elem.equalsIgnoreCase("wind")) {
                WindCharacter wi = met.searchWindCaracter(name, elem);
                for (int i = 0; i < wi.getWindAbilities().size(); i++) {
                    if (i == 0) {
                        String nameA = wi.getWindAbilities().get(i).getName();
                        int damage = wi.getWindAbilities().get(i).getDamage();
                        int cost = wi.getWindAbilities().get(i).getManaCosts();

                        jTextField18.setText(nameA);
                        jTextField19.setText(Integer.toString(damage));
                        jTextField20.setText(Integer.toString(cost));
                    }
                    if (i == 1) {
                        String nameA = wi.getWindAbilities().get(i).getName();
                        int damage = wi.getWindAbilities().get(i).getDamage();
                        int cost = wi.getWindAbilities().get(i).getManaCosts();

                        jTextField21.setText(nameA);
                        jTextField22.setText(Integer.toString(damage));
                        jTextField23.setText(Integer.toString(cost));
                    }
                    if (i == 2) {
                        String nameA = wi.getWindAbilities().get(i).getName();
                        int damage = wi.getWindAbilities().get(i).getDamage();
                        int cost = wi.getWindAbilities().get(i).getManaCosts();

                        jTextField24.setText(nameA);
                        jTextField25.setText(Integer.toString(damage));
                        jTextField26.setText(Integer.toString(cost));
                    }
                }
                globalElement = "wind";
            }
        }
        catch(NullPointerException e){
            globalName = "";
            JOptionPane.showMessageDialog(null, "This name doesn't exist");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            //Character
            String name = jTextField5.getText();
            String elem = jTextField6.getText().toLowerCase();
            
            //abilitie #1
            String nameA = jTextField7.getText();
            int damage = Integer.parseInt(jTextField8.getText());
            int cost = Integer.parseInt(jTextField9.getText());

            //abilitie #2
            String nameA2 = jTextField11.getText();
            int damage2 = Integer.parseInt(jTextField12.getText());
            int cost2 = Integer.parseInt(jTextField13.getText());

            //abilitie #3
            String nameA3 = jTextField14.getText();
            int damage3 = Integer.parseInt(jTextField15.getText());
            int cost3 = Integer.parseInt(jTextField16.getText());

            //validations
            if(name.equals("") || elem.equals("") || nameA.equals("") || nameA2.equals("") || nameA3.equals("")){
                JOptionPane.showMessageDialog(null, "Don't left spaces in blank");
            }
            
            for (int i = 0; i < UsersBackup.getCharacters().size(); i++) {
                if (name.equalsIgnoreCase(UsersBackup.getCharacters().get(i).getName())) {
                    JOptionPane.showMessageDialog(null, "This name is alraeady used");
                    return;
                }
            }
            
            if (nameA.equals(nameA2) || nameA.equals(nameA3) || nameA2.equals(nameA) || nameA2.equals(nameA3) || nameA3.equals(nameA) || nameA3.equals(nameA2)) {
                JOptionPane.showMessageDialog(null, "The names of the abilities can't be the same");
            } else {
                //method
                jTextField5.setText(null);
                jTextField6.setText(null);
                jTextField7.setText(null);
                jTextField8.setText(null);
                jTextField9.setText(null);
                jTextField11.setText(null);
                jTextField12.setText(null);
                jTextField13.setText(null);
                jTextField14.setText(null);
                jTextField15.setText(null);
                jTextField16.setText(null);

                met.createCharacter(name, elem, nameA, damage, cost, nameA2, damage2, cost2, nameA3, damage3, cost3);
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Don't left spaces in blank");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String name = jTextField10.getText();
        String elem = jTextField17.getText();
        
        if(name.equals("") || elem.equals("")){
            JOptionPane.showMessageDialog(null, "Don't left spaces in blank");
        }

        if (elem.equalsIgnoreCase("ground")) {
            GroundCharacter c = met.deleteGroundCharacter(name, elem);
            if (c != null) {
                System.out.println("The character has been deleted");
            } else {
                System.out.println("The character doesn't appear");
            }

        } else if (elem.equalsIgnoreCase("fire")) {
            FireCharacter f = met.deleteFireCharacter(name, elem);
            if (f != null) {
                System.out.println("The character has been deleted");
            } else {
                System.out.println("The character doesn't appear");
            }
        } else if (elem.equalsIgnoreCase("water")) {
            WaterCharacter w = met.deleteWaterCharacter(name, elem);
            if (w != null) {
                System.out.println("The character has been deleted");
            } else {
                System.out.println("The character doesn't appear");
            }
        } else if (elem.equalsIgnoreCase("wind")) {
            WindCharacter wi = met.deleteWindCharacter(name, elem);
            if (wi != null) {
                System.out.println("The character has been deleted");
            } else {
                System.out.println("The character doesn't appear");
            }
        }
        jTextField10.setText(null);
        jTextField17.setText(null);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        UserLogin.clip.stop();
        UserLoginInterface.sonido("Braveheart Soundtrack -   For The Love Of A Princess");
        Player Player1 = new Player("Player1");
        Player Player2 = new Player("Player2");
        player1 = Player1;
        player2 = Player2;

        GameInterface.setVisible(true);
        met.LoadComboBox();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField7KeyTyped

    private void jTextField11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField11KeyTyped

    private void jTextField14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField14KeyTyped

    private void jTextField8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField8KeyTyped

    private void jTextField9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField9KeyTyped

    private void jTextField12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField12KeyTyped

    private void jTextField13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField13KeyTyped

    private void jTextField15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField15KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField15KeyTyped

    private void jTextField16KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField16KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField16KeyTyped

    private void jTextField10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField10KeyTyped

    private void jTextField17KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField17KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField17KeyTyped

    private void jTextField18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField18KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField18KeyTyped

    private void jTextField21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField21KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField21KeyTyped

    private void jTextField24KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField24KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField24KeyTyped

    private void jTextField27KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField27KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField27KeyTyped

    private void jTextField19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField19KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField19KeyTyped

    private void jTextField22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField22KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField22KeyTyped

    private void jTextField25KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField25KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField25KeyTyped

    private void jTextField20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField20KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField20KeyTyped

    private void jTextField23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField23KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField23KeyTyped

    private void jTextField26KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField26KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isAlphabetic(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put letters");
        }
    }//GEN-LAST:event_jTextField26KeyTyped

    private void jTextField30KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField30KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField30KeyTyped

    private void jTextField29KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField29KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (java.lang.Character.isDigit(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You can't put numbers");
        }
    }//GEN-LAST:event_jTextField29KeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        UserLogin.UserLoginInterface.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    public static javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField29;
    public static javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    public static javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
